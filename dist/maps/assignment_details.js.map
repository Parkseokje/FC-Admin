{"version":3,"sources":["assignment_details.js"],"names":["window","requirejs","btnAssignEducation","$","btnDeleteAssignment","btnSubmit","formRegistAssignment","formModifyAssignment","tableEmployee","Util","initDataTable","tableAssignedEmployee","columns","checkAllEmployee","checkAllAssignedEmployee","messageInput","className","data","visible","initDateTimePicker","find","confirm","id","group_id","axios","bind","params","val","alert","console","this","delete","then","res","success","catch","error","response","location","on","form","html","reload","log","change","eduId","edu_id","datetimepicker","children","newData","table","add","rows","nodes","prop","checked","currentTarget","messageBytes","get","remain","DataTable","getBytes","e","preventDefault","message","currentTabId","checkedEmployeeIds","row","join","focus","attr","filter","map","parents","method","url","phones","trim","msg"],"mappings":"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","file":"assignment_details.js","sourcesContent":["/**\n * Created by yijaejun on 30/11/2016.\n */\n\"use strict\";\nwindow.requirejs([\"common\"],\nfunction (Util) {\n  var btnAssignEducation = $(\".btn-assign-education\");\n  var btnDeleteAssignment = $(\"#delete-assignment\");\n  var btnSubmit = $(\".btn-submit\");\n  var formRegistAssignment = $(\"#allocationEdu\");\n  var formModifyAssignment = $(\"#modifyAssignment\");\n  var tableEmployee = Util.initDataTable($(\"#table-employee\"));\n  var tableAssignedEmployee = Util.initDataTable($(\"#table-employee-assigned\"),\n    {\n      \"columns\": [\n        { \"data\": null, defaultContent: \"<input type=\\\"checkbox\\\",value=\\\"\\\">\" },\n        { \"data\": \"branch_name\", className: \"center\" },\n        { \"data\": \"duty_name\", className: \"center\" },\n        { \"data\": \"user_name\", className: \"center\" },\n        { \"data\": \"user_phone\", className: \"center\" },\n        { \"data\": \"user_id\", className: \"center\", visible: false }\n      ]\n    }\n  );\n  var checkAllEmployee = $(\"#check-all\");\n  var checkAllAssignedEmployee = $(\"#check-all-assigned\");\n  var messageInput = $(\".message\");\n\n  $(function () {\n    // DateTimePicker 설정\n    Util.initDateTimePicker(\n      formRegistAssignment.find(\"#start_dt\"),\n      formRegistAssignment.find(\"#end_dt\")\n    );\n    Util.initDateTimePicker(\n      formModifyAssignment.find(\"#start_dt\"),\n      formModifyAssignment.find(\"#end_dt\")\n    );\n    // datatable 설정\n    Util.initDataTable($(\"#table_assignment_details\"));\n    Util.initDataTable($(\"#table_assignment_history\"));\n  });\n\n  btnAssignEducation.bind(\"click\", function () {\n    $(\"#allocationEdu .user_group_id\").val($(\".description.group_id\").val());\n    $(\"#allocationEdu .bind_group_id\").val($(\".description.bind_group_id\").val());\n  });\n\n  btnDeleteAssignment.bind(\"click\", function () {\n    if (!confirm(\"교육생 그룹을 삭제하시겠습니까?\")) {\n      return false;\n    }\n\n    var params = {\n      id: $(this).data(\"id\"),\n      group_id: $(this).data(\"group-id\")\n    };\n\n    axios.delete(\"/assignment\", {\n      params: params\n    })\n    .then(function (res) {\n      if (!res.data.success) {\n        alert(\"교육생 그룹을 삭제하지 못했습니다. 관리자에게 문의하세요.\");\n      } else {\n        alert(\"교육생 그룹을 삭제하였습니다.\");\n      }\n      location.href = \"/assignment\";\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  });\n\n  // 배정이력 삭제하기\n  $(\"#table_assignment_history\").on(\"click\", \".btn-delete-assignment\", function () {\n    if (!confirm(\"삭제 시 되돌릴 수 없습니다. 정말 삭제하시겠습니까?\")) {\n      return false;\n    }\n\n    var params = {\n      id: $(this).data(\"logassigneduid\")\n    };\n\n    axios.delete(\"/assignment_history\",\n      {\n        params: params\n      })\n      .then(function (response) {\n        if (!response.data.success) {\n          alert(\"배정이력을 삭제하지 못했습니다.\");\n        } else {\n          alert(\"배정이력을 삭제하였습니다.\");\n        }\n        location.reload();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  });\n\n  $(\".btn-modify-assignment\").bind(\"click\", function () {\n    var form = $(\"#modifyAssignment\");\n\n    form.find(\".user_group_id\").val($(\".description.group_id\").val());\n    form.find(\".bind_group_id\").val($(\".description.bind_group_id\").val());\n    form.find(\"#start_dt\").datetimepicker().children(\"input\").val($(this).data(\"start\"));\n    form.find(\"#end_dt\").datetimepicker().children(\"input\").val($(this).data(\"end\"));\n    form.find(\"#log_assign_edu_id\").val($(this).data(\"logassigneduid\"));\n    form.find(\"#eduName\").html($(this).data(\"eduname\"));\n  });\n\n  checkAllEmployee.bind(\"click\", function () {\n    $(\":checkbox\", tableEmployee.rows().nodes()).prop(\"checked\", this.checked);\n  });\n\n  checkAllAssignedEmployee.bind(\"click\", function () {\n    $(\":checkbox\", tableAssignedEmployee.rows().nodes()).prop(\"checked\", this.checked);\n  });\n\n  // 교육과정 선택 변경\n  $(\"#select-education\").change(function () {\n    var eduId = $(this).val();\n\n    axios.get(\"/assignment/employees\", {\n      params: {\n        edu_id: eduId\n      }\n    })\n    .then(function (response) {\n      var newData = response.data.data;\n      var table = $(\"#table-employee-assigned\").DataTable();\n\n      table.clear().draw();\n      table.rows.add(newData); // Add new data\n      table.columns.adjust().draw(); // Redraw the DataTable\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  });\n\n  messageInput.on(\"keyup\", function (e) {\n    var message = window.$(e.currentTarget).val();\n    var messageBytes = Util.getBytes(message);\n    var remain = 90 - messageBytes;\n\n    // console.log(message);\n    // console.log(Util.getBytes(message));\n    // console.log(remain);\n\n    if (remain < 0) {\n      window.alert(\"90 Bytes 를 초과할 수 없습니다.\");\n      // message = message.substring(0, 90);\n      message = Util.cutBytes(message, 90);\n      window.$(e.currentTarget).val(message);\n      window.$(e.currentTarget).focus();\n      messageBytes = Util.getBytes(message);\n    }\n\n    window.$(\".remain-bytes\").html(messageBytes + \" / 90 바이트\");\n  });\n\n  btnSubmit.on(\"click\", function (e) {\n    e.preventDefault();\n\n    var currentTabId = window.$(\"ul.nav li.active\").children().attr(\"id\");\n    var checkedEmployeeIds;\n    switch (currentTabId) {\n    case \"employee\":\n      checkedEmployeeIds = window.$(\":checkbox:checked\",\n        tableEmployee.rows({filter: \"applied\"}).nodes()).map(\n          function () {\n            return tableEmployee.row(window.$(this).parents(\"tr\")).data()[4];\n          }\n        ).get().join(\",\");\n      break;\n    case \"employee-assigned\":\n      checkedEmployeeIds = window.$(\":checkbox:checked\",\n        tableAssignedEmployee.rows({filter: \"applied\"}).nodes()).map(\n          function () {\n            return tableAssignedEmployee.row(window.$(this).parents(\"tr\")).data()[\"user_phone\"];\n          }\n        ).get().join(\",\");\n      break;\n    default:\n      break;\n    }\n\n    if (!checkedEmployeeIds) {\n      window.alert(\"직원을 선택하세요.\");\n      return false;\n    }\n\n    var message = messageInput.val().trim();\n    if (message === \"\") {\n      window.alert(\"메세지를 입력하세요.\");\n      messageInput.focus();\n      return false;\n    }\n\n    if (!window.confirm(\"메세지를 보내시겠습니까?\")) {\n      return false;\n    }\n\n    window.axios({\n      method: \"post\",\n      url: \"/api/v1/sms/send\",\n      data: {\n        phones: checkedEmployeeIds,\n        msg: message\n      }\n    })\n    .then(\n      function (res) {\n        if (res.data.success === true) {\n          window.alert(\"메세지를 전송하였습니다.\");\n        } else {\n          window.alert(\"알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.\");\n        }\n      });\n  });\n});\n"],"sourceRoot":"/source/"}