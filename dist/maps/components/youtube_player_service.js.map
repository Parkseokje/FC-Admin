{"version":3,"sources":["components/youtube_player_service.js"],"names":["window","define","Util","self","YoutubePlayerService","options","this","init","$","prototype","extend","b","hasOwnProperty","key","a","extendOptions","tag","src","document","createElement","firstScriptTag","parentNode","insertBefore","Player","height","YT","width","videoId","events","onReady","onStateChange","onPlayerStateChange","event","playVideo","target","stopVideo","player","console","msg","log","err","resize"],"mappings":"AAAA,YACAA,QAAOC,QAAPD,UAGE,SAAWE,GAITC,QAAOC,GAAPC,GAAAF,EAAOG,KAGPH,EAAKI,cAALF,GACDF,EAAAI,OAPD,GAAIC,GAAIA,KAAJA,EAAIA,GAAKR,OAAOQ,CAJtB,OAcIJ,GAAAK,WAEAC,WACEA,OAAK,SAAWC,EAAGA,GACjB,IAAA,GAAMC,KAAAA,GACFC,EAAAA,eAAFA,KACDC,EAAAD,GAAAF,EAAAE,GAP0B,OAAAC,IAa7BC,cAAA,SAAoBL,GACpBJ,KAAKI,QAAOJ,KAAKD,UAASA,KAA1BA,SAd6BC,KAAAI,OAAAJ,KAAAD,QAAAA,IAkB7BE,KAAA,WAEAS,GAAIC,GAAMC,SAAAC,cAAA,SAAVH,GAAIC,IAAM,oCAGVG,IAAAA,GAAeC,SAAWC,qBAAkBF,UAA5C,EAAAA,GAAeC,WAAWC,aAAaN,EAAKI,GAK1CpB,OAAAA,wBAA8BuB,WAC5BC,OAAAA,OAD6C,GAAAxB,QAAAyB,GAAAF,OAAA,UAE7CG,OAAO,MACPC,MAAAA,OACAC,QAAQzB,EAAAE,QAAAsB,QACNC,QACAC,QAAA7B,OAAiBA,cAFX8B,cAAA9B,OAAA+B,wBASVC,OAAAA,cAAaC,SAAbD,GADFA,EAAAE,OAAAD,aAQAjC,OAAO+B,MAAAA,EACL/B,OAAA+B,oBAAA,SAAAC,KAOAhC,OAAAA,UAAcmC,WADhBnC,OAAAoC,OAAAD,cAKAE,cAAY,SAAAC,GA5DiBD,QAAAE,IAAA,iBAAAD,IA+D7BD,YAAA,SAAYG,GA/DiBH,QAAAE,IAAA,iBAAAC,IAkE7BhC,OAAER,WACAQ,EAAAA,QAAEiC,OAAUjB,WADdhB,EAAA,UAAAgB,OAAAhB,EAAAR,QAAAwB,SAAAhB,EAAA,iBAAAgB,cA/ENpB","file":"components/youtube_player_service.js","sourcesContent":["'use strict';\nwindow.define([\n  'common'\n], function (Util) {\n  var self = null;\n  var $ = $ || window.$;\n\n  function YoutubePlayerService (options) {\n    self = this;\n\n    self.extendOptions(options);\n    self.init();\n  }\n\n  YoutubePlayerService.prototype = {\n    // 옵션 저장 변수\n    options: {},\n    extend: function (a, b) {\n      for (var key in b) {\n        if (b.hasOwnProperty(key)) {\n          a[key] = b[key];\n        }\n      }\n      return a;\n    },\n    // 옵션 확장\n    extendOptions: function (options) {\n      this.options = this.extend({}, this.options);\n      this.extend(this.options, options);\n    },\n    // 컴포넌트 초기화\n    init: function () {\n      // 2. This code loads the IFrame Player API code asynchronously.\n      var tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      var firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n      // 3. This function creates an <iframe> (and YouTube player)\n      //    after the API code downloads.\n      window.onYouTubeIframeAPIReady = function () {\n        window.player = new window.YT.Player('player', {\n          height: '600',\n          width: '100%',\n          videoId: self.options.videoId,\n          events: {\n            'onReady': window.onPlayerReady,\n            'onStateChange': window.onPlayerStateChange\n          }\n        });\n      };\n\n      // 4. The API will call this function when the video player is ready.\n      window.onPlayerReady = function (event) {\n        event.target.playVideo();\n      };\n\n      // 5. The API calls this function when the player's state changes.\n      //    The function indicates that when playing a video (state=1),\n      //    the player should play for six seconds and then stop.\n      window.done = false;\n      window.onPlayerStateChange = function (event) {\n        // if (event.data == window.YT.PlayerState.PLAYING && !window.done) {\n        //   setTimeout(window.stopVideo, 6000);\n        //   window.done = true;\n        // }\n      };\n\n      window.stopVideo = function () {\n        window.player.stopVideo();\n      };\n    },\n    reportMessage: function (msg) {\n      console.log('aquaservice : ' + msg);\n    },\n    reportError: function (err) {\n      console.log('aquaservice : ' + err);\n    },\n    resize: function () {\n      $(window).resize(function () {\n        $('#video').height($(window).height() - $('.wrapper_foot').height());\n      });\n    }\n  };\n\n  return YoutubePlayerService;\n});\n"],"sourceRoot":"/source/"}