{"version":3,"sources":["education_details.js"],"names":["requirejs","btnDeleteEducation","makeCourseGroupList","$","courseGroupList","order","course_group","course_id","data","id","this","course_group_id","is","mode","push","valid_course_count","duplicated_item","find","val","course_name","selectCourseList","text","course_group_key","element","length","show","courseContainer","deleteEduCourse","course","append","hide","calculateTotalWeight","pointTotal","pointWeightForm","each","index","elem","parseInt","_val","alert","split","_len","_tmp","slice","btnAddEduCourse","totalPoint","btnRegisterPointWeight","handle","sortable","forcePlaceholderSize","zIndex","start","e","ui","update","attr","item","oldIndex","newIndex","removeAttr","console","log","tinymce","init","selector","bind","confirm","params","edu_id","axios","delete","response","location","success","href","catch","error","btnModifyEdu","eduName","focus","activeEditor","getContent","eduDesc","method","name","desc","course_group_list","start_dt","end_dt","trim","then","res","window","parent","addCourseGroupItem","on","target","validateEveryInput","frmPointWeight","submit","keyCode","html"],"mappings":"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","file":"education_details.js","sourcesContent":["/**\n * Created by yijaejun on 30/11/2016.\n */\n\"use strict\";\nrequirejs([\n  \"common\"\n],\nfunction (Util) {\n  var btnModifyEdu = $(\".btn-modify-edu\");            // 교육과정 수정버튼\n  var btnDeleteEducation = $(\"#btnDeleteEducation\");  // 교육과정 삭제버튼\n  var btnAddEduCourse = $(\"#btn-add-course-edu\");     // 강의추가 버튼\n  var selectCourseList = $(\"#select-course-list\");    // 추가할 강의 리스트\n  var courseContainer = $(\"#draggablePanelList\");     // 추가된 강의 목록\n  // 포인트 가중치 설정 관련 변수\n  var pointTotal = 0;\n  var frmPointWeight = $(\"#frm_point_weight\");\n  var pointWeightForm = $(\"#pointWeight\");\n  var totalPoint = $(\".total_point\");\n  var btnRegisterPointWeight = $(\".btn-register-point-weight\");\n\n  // 초기 설정\n  $(function () {\n    // jQuery UI sortable 초기화\n    $(\"#draggablePanelList\").sortable({\n      placeholder: \"sort-highlight\",\n      handle: \".handle\",\n      forcePlaceholderSize: true,\n      zIndex: 999999,\n      start: function (e, ui) {\n        $(this).attr(\"data-previndex\", ui.item.index());\n      },\n      update: function (e, ui) {\n        var newIndex = ui.item.index();\n        var oldIndex = $(this).attr(\"data-previndex\");\n        $(this).removeAttr(\"data-previndex\");\n        console.log(\"newIndex : \" + newIndex + \" oldIndex : \" + oldIndex);\n      }\n    });\n\n      // DateTimePicker 설정\n    // var start_dt = moment().format();\n    // var end_dt = moment().add(6, 'days');\n\n    //   // 교육 시작일자\n    // $('#start_dt').datetimepicker({\n    //   defaultDate: start_dt,\n    //   format: 'YYYY-MM-DD',\n    //   showTodayButton: true\n    // });\n\n    //   // 교육 종료일자\n    // $('#end_dt').datetimepicker({\n    //   defaultDate: end_dt,\n    //   format: 'YYYY-MM-DD',\n    //   useCurrent: false,\n    //   showTodayButton: true\n    // });\n\n    //   // 날짜가 서로 겹치지 않도록 설정한다.\n    // $('#start_dt').on('dp.change', function (e) {\n    //   $('#end_dt').data('DateTimePicker').minDate(e.date);\n    // });\n    // $('#end_dt').on('dp.change', function (e) {\n    //   $('#start_dt').data('DateTimePicker').maxDate(e.date);\n    // });\n\n    tinymce.init({\n      selector: \".course-desc\"\n    });\n  });\n\n  // 교육과정 삭제하기\n  btnDeleteEducation.bind(\"click\", function () {\n    if (!confirm(\"삭제 시 되돌릴 수 없습니다. 정말 삭제하시겠습니까?\")) {\n      return false;\n    }\n\n    var params = {\n      edu_id: $(this).data(\"edu-id\")\n    };\n\n    axios\n      .delete(\"/education/deactivate\", {\n        params: params\n      })\n      .then(function(response) {\n        if (!response.data.success) {\n          alert(\"교육과정을 삭제하였습니다.\");\n        } else {\n          alert(\"교육과정을 삭제하였습니다.\");\n          location.href = \"/education\";\n        }\n      })\n      .catch(function(error) {\n        console.log(error);\n      });\n  });\n\n  // 교육과정 수정\n  btnModifyEdu.bind(\"click\", function () {\n    var eduName = $(\".course-name\");\n    var eduDesc = tinymce.activeEditor.getContent();\n    var courseGroupList = makeCourseGroupList();\n\n    if (eduName.val() == \"\") {\n      alert(\"교육과정명을 입력하세요.\");\n      eduName.focus();\n      return false;\n    }\n\n    if (eduDesc === \"\") {\n      alert(\"교육과정 소개를 입력해주세요.\");\n      eduDesc.focus();\n      return false;\n    }\n\n    if (!courseGroupList.valid_course_count) {\n      alert(\"강의를 추가해주세요.\");\n      return false;\n    }\n\n    if (!confirm(\"수정하시겠습니까?\")) {\n      return false;\n    }\n\n    axios({\n      method: \"put\",\n      url: \"/education/modify/edu\",\n      data: {\n        id: $(\"#edu_id\").val(),\n        name: eduName.val().trim(),\n        desc: eduDesc,\n        course_group_list: courseGroupList.data,\n        start_dt: $(\"#start_dt\").find(\"input\").val() + \" \" + \"00:00:00\",\n        end_dt: $(\"#end_dt\").find(\"input\").val() + \" \" + \"23:59:59\"\n      }\n    }).then(function(res) {\n      if (res.data.success == true) {\n        alert(\"교육과정을 수정하였습니다.\");\n      } else {\n        alert(\"알 수 없는 오류가 발생했습니다. 잠시 후에 다시 시도해주세요.\");\n      }\n      window.location.reload();\n    });\n  });\n\n  // 강의그룹 데이터를 생성한다.\n  function makeCourseGroupList () {\n    var courseGroupList = [];\n    var order = 0;\n    var mode = \"\";\n    var valid_course_count = 0;\n\n    $(\"#draggablePanelList\").find(\"li.list-group-item\").each(function (index) {\n      var course_group = {\n        id: $(this).data(\"course-group-id\"),\n        course_id: $(this).data(\"course-id\"),\n        course_group_id: $(this).data(\"course-group-key\"),\n        order: order\n      };\n\n      if (course_group.id) {\n        if ($(this).is(\":visible\")) { course_group.mode = \"UPDATE\"; } else { course_group.mode = \"DELETE\"; }\n      } else { course_group.mode = \"INSERT\"; }\n\n      courseGroupList.push(course_group);\n\n      if (course_group.mode !== \"DELETE\") {\n        valid_course_count += 1;\n        order += 1;\n      }\n    });\n\n    return { data: courseGroupList, valid_course_count: valid_course_count };\n  }\n\n  // 강의 삭제\n  $(\".btn-delete-course\").bind(\"click\", function() {\n    // API 삭제 요청\n    deleteEduCourse(\n      $(this)\n        .parent()\n        .parent()\n    );\n  });\n\n  // 강의 추가\n  btnAddEduCourse.bind(\"click\", function() {\n    addCourseGroupItem();\n  });\n\n  /**\n   * 동적으로 추가된 강의에 이벤트 바인딩\n   */\n  courseContainer.on(\"click\", \"> li\", function(e) {\n    // API 삭제 요청\n    deleteEduCourse(\n      $(e.target)\n        .parent()\n        .parent()\n        .parent()\n    );\n  });\n\n  // 강의를 그룹에 추가한다.\n  function addCourseGroupItem () {\n    var course_id = selectCourseList.find(\"option:selected\").val();\n    var course_name = selectCourseList.find(\"option:selected\").text();\n    var course_group_key = $(\"#course_group_key\").val();\n    var element = \"\";\n\n      // 강의 중복추가 방지\n    var duplicated_item = $(\".list-group-item[data-course-id=\\\"\" + course_id + \"\\\" ]\");\n    if (duplicated_item.length) {\n      duplicated_item.show();\n      return false;\n    }\n\n    element += \"<li class=\\\"list-group-item\\\" data-course-id=\\\"\" + course_id + \"\\\" data-course-group-id=\\\"\\\" data-course-group-key=\\\"\" + course_group_key + \"\\\">\";\n    element += \"    <div class=\\\"course\\\">\";\n    element += \"        <span class=\\\"handle ui-sortable-handle\\\">\";\n    element += \"            <i class=\\\"fa fa-ellipsis-v\\\"></i>\";\n    element += \"            <i class=\\\"fa fa-ellipsis-v\\\"></i>\";\n    element += \"        </span>\";\n    element += course_name;\n    element += \"        <a href=\\\"#\\\" class=\\\"btn-delete-course\\\">\";\n    element += \"            <i class=\\\"fa fa-remove text-red\\\"></i>\";\n    element += \"        </a>\";\n    element += \"    </div>\";\n    element += \"</li>\";\n\n    courseContainer.append(element);\n  }\n\n  // 교육과정에서 강의를 삭제한다.\n  // @params course : .btn-delete-course 버튼의 부모의 부모 element\n  function deleteEduCourse(course) {\n    course.hide();\n  }\n\n  /**\n   * 강의순서를 변경한다.\n   */\n  // function changeCourseOrder () {\n  //   var promises = [];\n  //   var items = $('div.list-group-item');\n\n  //   for (var index = 0; index < items.length; index++) {\n  //     promises.push(makeCourseOrderChangeRequest($(items[index])));\n  //   }\n\n  //   axios.all(promises).then(function (results) {\n  //     results.forEach(function (response) {\n  //       location.reload();\n  //     });\n  //   });\n  // }\n\n  /**\n   * DB 에서 강의 순서를 변경한다.\n   */\n  function makeCourseOrderChangeRequest(course) {\n    return axios({\n      method: \"put\",\n      url: \"/education/coursegroup\",\n      data: {\n        id: course.data(\"course-group-id\"),\n        order: course.index()\n      }\n    });\n  }\n\n  // 설정값을 저장하려고 할 때 전체 값을 가져와서 합산이 100이 떨어지지 않을 경우 에러 메시지를 띄운다.\n  btnRegisterPointWeight.bind(\"click\", function (e) {\n    var pointTotal = calculateTotalWeight();\n\n    if (pointTotal !== 100) {\n      alert(\"포인트의 합계가 100이 되어야 합니다. 설정 값을 다시 확인해 주세요\");\n      e.preventDefault();\n    } else {\n      frmPointWeight.submit();\n    }\n  });\n\n  // 숫자가 입력되지 않았을 경우 경고창을 띄워준다.\n  pointWeightForm.find(\"input\").bind(\"blur\", function() {\n    validateEveryInput($(this));\n    totalPoint.html(calculateTotalWeight());\n  });\n\n  // input value 초기화\n  pointWeightForm.find(\"input\").each(function(index, elem) {\n    if ($(elem).attr(\"type\") !== \"hidden\") {\n      var _val = $(elem).val();\n\n      if (_val === \"\") {\n        $(elem).val(0);\n        pointTotal = 0;\n      }\n      pointTotal += parseInt($(elem).val());\n      totalPoint.html(pointTotal);\n    }\n  });\n\n  // calculate totalPoint\n  pointWeightForm.find(\"input\").bind(\"keydown\", function(e) {\n    // block from insert dot character\n    if (e.keyCode === 190 || e.keyCode === 13) {\n      return false;\n    }\n    totalPoint.html(calculateTotalWeight());\n  });\n\n  // input값을 돌면서 합산을 내는 함수를 별도로 제작한다.\n  function calculateTotalWeight() {\n    var pointTotal = 0;\n    pointWeightForm.find(\"input\").each(function (index, elem) {\n      if ($(elem).is(\":visible\")) {\n        pointTotal += parseInt($(elem).val());\n      }\n    });\n    return pointTotal;\n  }\n\n  /**\n   * 엘리먼트에 설정된 값을 규칙에 맞게 수정을 한다.\n   * @param elem\n   */\n  function validateEveryInput (elem) {\n    var _val = elem.val();\n\n    if (_val == 0 && _val.length >= 1) {\n      $(elem).val(0);\n    }\n\n    if (_val.length >= 3) {\n      alert(\"허용 범위를 넘었습니다.\");\n      elem.val(0);\n    }\n\n    if (_val === \"\") {\n      elem.val(0);\n    }\n\n    // 숫자 앞에 0이 있을 경우 앞의 0을 자동으로 제거해준다\n    if (_val.split(\"\")[0] === \"0\") {\n      var _tmp = _val.split(\"\"); // 뽑아낸 것을 리턴한다.\n      var _len = _tmp.length;\n\n      if (_len >= 2) {\n        _val = _val.slice(1, _len);\n      }\n\n      elem.val(_val);\n    }\n  }\n});\n"],"sourceRoot":"/source/"}